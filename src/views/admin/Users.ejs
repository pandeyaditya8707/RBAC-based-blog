<div class="d-flex justify-content-between align-items-center mb-4">
  <h2 class="page-title mb-0">User Management</h2>
  <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createUserModal">
    <i class="bi bi-plus-lg me-2"></i>Add New User
  </button>
</div>

<!-- Users Table -->
<div class="card">
  <div class="card-body">
    <div class="table-responsive">
      <!-- Added id="usersTable" -->
      <table id="usersTable" class="table table-hover table-bordered">
        <thead>
          <tr>
            <th>ID</th>
            <th>Username</th>
            <th>Email</th>
            <th>Role</th>
            <th width="150">Actions</th>
          </tr>
        </thead>
        <tbody>
          <% users.forEach(user => { %>
            <tr>
              <td><%= user.id %></td>
              <td><strong><%= user.username %></strong></td>
              <td><%= user.email %></td>
              <td>
                <span class="badge bg-primary">
                  <%= user.Role ? user.Role.name : "No Role" %>
                </span>
              </td>
              <td>
                <button class="btn btn-warning btn-sm editUserBtn me-1" 
                        data-id="<%= user.id %>" 
                        data-role="<%= user.roleId %>">
                  <i class="bi bi-pencil"></i>
                </button>
                <button class="btn btn-danger btn-sm deleteUserBtn" 
                        data-id="<%= user.id %>">
                  <i class="bi bi-trash"></i>
                </button>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<!-- Create User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Create New User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="createUserForm">
          <div class="mb-3">
            <label for="username" class="form-label">Username</label>
            <div class="input-group">
              <span class="input-group-text"><i class="bi bi-person"></i></span>
              <input type="text" name="username" id="username" class="form-control" required>
            </div>
          </div>
          <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <div class="input-group">
              <span class="input-group-text"><i class="bi bi-envelope"></i></span>
              <input type="email" name="email" id="email" class="form-control" required>
            </div>
          </div>
          <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <div class="input-group">
              <span class="input-group-text"><i class="bi bi-lock"></i></span>
              <input type="password" name="password" id="password" class="form-control" required>
              <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                <i class="bi bi-eye" id="toggleIcon"></i>
              </button>
            </div>
          </div>
          <div class="mb-3">
            <label for="roleId" class="form-label">Role</label>
            <div class="input-group">
              <span class="input-group-text"><i class="bi bi-shield"></i></span>
              <select name="roleId" id="roleId" class="form-select" required>
                <option value="">Select a role</option>
                <% roles.forEach(role => { %>
                  <option value="<%= role.id %>"><%= role.name %></option>
                <% }) %>
              </select>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" form="createUserForm" class="btn btn-primary" id="createUserBtn">
          Create User
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Edit User Role</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="editUserForm">
          <input type="hidden" name="userId" id="editUserId">
          <div class="mb-3">
            <label for="editRoleId" class="form-label">Role</label>
            <select name="roleId" id="editRoleId" class="form-select" required>
              <% roles.forEach(role => { %>
                <option value="<%= role.id %>"><%= role.name %></option>
              <% }) %>
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" form="editUserForm" class="btn btn-warning" id="editUserBtn">
          Update Role
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Alert Container -->
<div id="alertContainer" class="position-fixed top-0 end-0 p-3" style="z-index: 1060;"></div>


<script>
$(document).ready(function() {


  // Password toggle functionality
  $('#togglePassword').on('click', function() {
    const passwordInput = $('#password');
    const toggleIcon = $('#toggleIcon');
    
    if (passwordInput.attr('type') === 'password') {
      passwordInput.attr('type', 'text');
      toggleIcon.removeClass('bi-eye').addClass('bi-eye-slash');
    } else {
      passwordInput.attr('type', 'password');
      toggleIcon.removeClass('bi-eye-slash').addClass('bi-eye');
    }
  });

  
  $('#usersTable').DataTable({
    paging: true,
    searching: true,
    ordering: true,
    responsive: true,
    lengthMenu: [5, 10, 25, 50],
    pageLength: 10,
    language: {
      search: "Search Users:",
      lengthMenu: "Show _MENU_ users per page",
      info: "Showing _START_ to _END_ of _TOTAL_ users"
    }
  });

  // Show alert function
  function showAlert(message, type = 'info') {
    const alertId = 'alert-' + Date.now();
    const alertHTML = `
      <div class="alert alert-${type} alert-dismissible fade show" id="${alertId}" role="alert">
        <i class="bi bi-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle'} me-2"></i>
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      </div>
    `;
    $('#alertContainer').append(alertHTML);
    
    setTimeout(() => {
      $(`#${alertId}`).alert('close');
    }, 5000);
  }

  // Create User Form
  $("#createUserForm").on("submit", function(e) {
    e.preventDefault();
    const submitBtn = $("#createUserBtn");
    const originalText = submitBtn.html();
    submitBtn.html('<span class="spinner-border spinner-border-sm me-2"></span>Creating...').prop('disabled', true);
    
    $.ajax({
      url: "/admin/users/create",
      type: "POST",
      data: $(this).serialize(),
      success: function() {
        $("#createUserModal").modal('hide');
        $("#createUserForm")[0].reset();
        showAlert('User created successfully!', 'success');
        setTimeout(() => location.reload(), 1500);
      },
      error: function(xhr) {
        let errorMsg = 'Error creating user';
        if (xhr.responseJSON?.message) {
          errorMsg = xhr.responseJSON.message;
        } else if (xhr.responseJSON?.errors) {
          // Handle Joi validation errors from backend
          errorMsg = xhr.responseJSON.errors.join(', ');
        }
        showAlert(errorMsg, 'danger');
      },
      complete: function() {
        submitBtn.html(originalText).prop('disabled', false);
      }
    });
  });

  // Edit User Button - Use event delegation for dynamic content
  $(document).on("click", ".editUserBtn", function() {
    $("#editUserId").val($(this).data("id"));
    $("#editRoleId").val($(this).data("role"));
    $("#editUserModal").modal('show');
  });

  // Edit User Form
  $("#editUserForm").on("submit", function(e) {
    e.preventDefault();
    const submitBtn = $("#editUserBtn");
    const originalText = submitBtn.html();
    submitBtn.html('<span class="spinner-border spinner-border-sm me-2"></span>Updating...').prop('disabled', true);
    
    $.ajax({
      url: "/admin/users/update-role",
      type: "POST",
      data: $(this).serialize(),
      success: function() {
        $("#editUserModal").modal('hide');
        showAlert('User role updated successfully!', 'success');
        setTimeout(() => location.reload(), 1500);
      },
      error: function(xhr) {
        let errorMsg = 'Error updating user role';
        if (xhr.responseJSON?.message) errorMsg = xhr.responseJSON.message;
        showAlert(errorMsg, 'danger');
      },
      complete: function() {
        submitBtn.html(originalText).prop('disabled', false);
      }
    });
  });

  // Delete User Button - Use event delegation for dynamic content
  $(document).on("click", ".deleteUserBtn", function() {
    const userId = $(this).data("id");
    const deleteBtn = $(this);
    if (confirm("Are you sure you want to delete this user?")) {
      const originalHtml = deleteBtn.html();
      deleteBtn.html('<span class="spinner-border spinner-border-sm"></span>').prop('disabled', true);
      
      $.ajax({
        url: "/admin/users/delete",
        type: "POST",
        data: { userId },
        success: function() {
          showAlert('User deleted successfully!', 'success');
          setTimeout(() => location.reload(), 1500);
        },
        error: function(xhr) {
          let errorMsg = 'Error deleting user';
          if (xhr.responseJSON?.message) errorMsg = xhr.responseJSON.message;
          showAlert(errorMsg, 'danger');
          deleteBtn.html(originalHtml).prop('disabled', false);
        }
      });
    }
  });

  // Reset modals when hidden
  $('#createUserModal, #editUserModal').on('hidden.bs.modal', function () {
    $(this).find('form')[0].reset();
    $(this).find('.btn').prop('disabled', false);
  });
});
</script>
